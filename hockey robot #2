#include <PRIZM.h>
#include <TELEOP.h>

PRIZM spback;
PS4 controller;
EXPANSION motorExp;

int servoDelayMs = 680;
int reverse = false;
int timeBeforeFlipMs = 330;
int speed = 100;


float lowSpeed = 0.2;
float medSpeed = 0.5;
float highSpeed = 1;

float currentSpeed = medSpeed;
int shift = 2;

void setup() {
  spback.PrizmBegin();
  controller.setDeadZone (LEFT,10);    
  controller.setDeadZone(RIGHT,10);
  motorExp.resetEncoder(1, 2);
  spback.setServoSpeed(1, 100);
  spback.setServoPosition(1, 18);
  controller.setLED(YELLOW);
}

void loop() {
  controller.getPS4();                                 

  //main update loop
  if(controller.Connected && controller.inRange){
    reverseDrive();
    shifter();
    move();
    intake();
    timedFlip();
    letBallThrough();
    if (controller.Button(UP)){    
      manualFlip(-1);
    }else if (controller.Button(DOWN)){    
      manualFlip(1);
    }else{
      flip();
    }
  }
  else{                                         
    spback.setMotorPowers(0,0);
    motorExp.setMotorPowers(1,0,0);
  }
}

void reverseDrive(){
  if (controller.Button(SQUARE)){
    reverse ^= true;
    delay(300);
  }
}

//stolen from https://github.com/8BitSky/TetrixCode/blob/main/Shifter%20Introduction
void shifter(){
 if(controller.Button(RIGHT)==1 && shift <3){
   shift++;
   delay(100);
 }
  if(controller.Button(LEFT)==1 && shift >1){
  shift--;
  delay(100);
 }
 switch (shift) {
  case 1:
    currentSpeed = lowSpeed;
    controller.setLED(GREEN);
    break;
  case 2:
     currentSpeed = medSpeed;
     controller.setLED(YELLOW);
     break;
  case 3:
     currentSpeed = highSpeed;
     controller.setLED(RED);
     break;
}
}

void move(){
  if (reverse){
    spback.setMotorPowers(controller.Motor(LY)*currentSpeed, controller.Motor(RY)*currentSpeed *-1);
  }else{
    spback.setMotorPowers(controller.Motor(RY)*currentSpeed *-1, controller.Motor(LY)*currentSpeed);
  }
}

void intake(){
  motorExp.setMotorPower(1, 1, controller.Motor(L2T));
}

void timedFlip(){
  if (controller.Button(R1)){
    
    //ball servo
    spback.setServoPosition(1, 40);
    delay(servoDelayMs);
    spback.setServoPosition(1, 18);
    
    delay(timeBeforeFlipMs);

    //flipper
    motorExp.setMotorPower(1, 2, -100);
    delay(500);
    motorExp.setMotorPower(1, 2, 0);
    delay(300);
  }
}

void letBallThrough(){
  if (controller.Button(CIRCLE)){
    spback.setServoPosition(1, 40);
    delay(servoDelayMs);
    spback.setServoPosition(1, 18);
    delay(200);
  }
}

void flip(){ // gear ratio is   40 : 32
  if (controller.Button(R2)){
    motorExp.setMotorPower(1, 2, -100);
    delay(500);
    motorExp.setMotorPower(1, 2, 0);
    delay(300);
    // motorExp.setMotorTarget(1, 2, 360, 1540);
    // delay(3000);
    // motorExp.resetEncoder(1, 2);
  }
}

void manualFlip(int direction){
  motorExp.setMotorPower(1, 2, controller.Motor(R2T)*direction*0.5);
}
